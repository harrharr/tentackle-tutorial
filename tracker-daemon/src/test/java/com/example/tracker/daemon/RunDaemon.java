/*
 * Tracker generated by tentackle-project-archetype.
 */

package com.example.tracker.daemon;

import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;

public class RunDaemon {

  private int exitValue;
  private Throwable exitThrowable;


  @Test
  public void runDaemon() {
    run(new String[] {"--statistics"});
  }


  private synchronized void run(String[] args) {

    @SuppressWarnings("unchecked")
    TrackerDaemon daemon = new TrackerDaemon() {

      @Override
      protected boolean isSystemExitNecessaryToStop() {
        return false;   // no System.exit() by default within the test container
      }

      @Override
      public void stop(int exitValue, Throwable exitThrowable) {
        super.stop(exitValue, exitThrowable);
        synchronized (RunDaemon.this) {
          RunDaemon.this.exitValue = exitValue;
          RunDaemon.this.exitThrowable = exitThrowable;
          RunDaemon.this.notifyAll();
        }
      }
    };

    daemon.start(args);

    try {
      wait();   // keep it running until stop invoked
      if (exitValue != 0) {
        Assert.fail("daemon terminated while running with exit code = " + exitValue, exitThrowable);
      }
      Reporter.log("daemon finished", true);
    }
    catch (InterruptedException e) {
      Reporter.log("daemon interrupted", true);
    }
  }

}
