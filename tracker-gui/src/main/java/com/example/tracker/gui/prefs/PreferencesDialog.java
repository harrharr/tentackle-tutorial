/*
 * Tracker generated by tentackle-project-archetype.
 */

package com.example.tracker.gui.prefs;

import com.example.tracker.common.TrackerPreferences;
import javafx.fxml.FXML;
import javafx.geometry.Insets;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.stage.Modality;
import javafx.stage.Stage;

import org.tentackle.fx.AbstractFxController;
import org.tentackle.fx.Fx;
import org.tentackle.fx.FxController;
import org.tentackle.fx.FxControllerService;
import org.tentackle.fx.component.FxButton;
import org.tentackle.fx.container.FxTab;
import org.tentackle.fx.rdc.security.SecurityDialogFactory;

import java.util.ResourceBundle;
import java.util.prefs.BackingStoreException;

/**
 * Preferences controller with stage,
 */
@FxControllerService
public class PreferencesDialog extends AbstractFxController {

  @FXML
  private FxTab generalTab;

  // to be cont'd



  @FXML
  private FxButton saveButton;
  @FXML
  private FxButton cancelButton;
  @FXML
  private FxButton securityButton;

  @FXML
  private ResourceBundle resources;

  @FXML
  private void initialize() {
    generalTab.setContent(createTab(GeneralPreferences.class));
    // to be cont'd

    securityButton.setGraphic(Fx.createGraphic("security"));
    securityButton.setOnAction(e -> security());

    cancelButton.setGraphic(Fx.createGraphic("cancel"));
    cancelButton.setOnAction(e -> getStage().hide());

    saveButton.setGraphic(Fx.createGraphic("save"));
    saveButton.setOnAction(e -> {
      try {
        TrackerPreferences.getInstance().sync();
        getStage().hide();
      }
      catch (BackingStoreException ex) {
        Fx.error(getView(), resources.getString("saveFailed"), ex, () -> getStage().hide());
      }
    });
  }


  /**
   * Loads the controller and gets the view wrapped in a borderpane.
   *
   * @param <T> the controller type
   * @param controllerClass the controller class
   * @return the tab node
   */
  private <T extends FxController> Node createTab(Class<T> controllerClass) {
    Parent view = Fx.load(controllerClass).getView();
    BorderPane pane = Fx.create(BorderPane.class);
    pane.setCenter(view);
    BorderPane.setMargin(view, new Insets(5));
    return pane;
  }

  /**
   * Shows the security dialog.
   */
  private void security() {
    SecurityDialogFactory.getInstance().showDialog(PreferencesDialog.class);
  }


  /**
   * Shows the modal preferences window.
   */
  public static void show() {
    Stage stage = Fx.createStage(Modality.APPLICATION_MODAL);
    PreferencesDialog pp = Fx.load(PreferencesDialog.class);
    Scene scene = Fx.createScene(pp.getView());
    stage.setScene(scene);
    stage.setTitle(pp.resources.getString("preferences"));
    pp.getContainer().updateView();
    Fx.show(stage);
  }

}
