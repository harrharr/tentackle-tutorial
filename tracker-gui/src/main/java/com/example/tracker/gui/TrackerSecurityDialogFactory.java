/*
 * Tracker generated by tentackle-project-archetype.
 */

package com.example.tracker.gui;

import com.example.tracker.pdo.md.OrgUnit;
import com.example.tracker.pdo.md.User;
import com.example.tracker.pdo.md.UserGroup;
import javafx.scene.Parent;
import javafx.stage.Modality;
import javafx.stage.Popup;
import javafx.stage.Window;

import org.tentackle.common.Service;
import org.tentackle.fx.FxFactory;
import org.tentackle.fx.FxUtilities;
import org.tentackle.fx.NotificationBuilder;
import org.tentackle.fx.rdc.Rdc;
import org.tentackle.fx.rdc.security.DefaultSecurityDialogFactory;
import org.tentackle.fx.rdc.security.SecurityDialogFactory;
import org.tentackle.pdo.DomainContext;
import org.tentackle.pdo.Pdo;
import org.tentackle.pdo.PersistentDomainObject;

import java.util.function.Consumer;

/**
 * Application specific security dialog factory.<br>
 * Implements the selection of the grantee.
 */
@Service(SecurityDialogFactory.class)
@SuppressWarnings("unchecked")        // due to selectGrantee() below
public class TrackerSecurityDialogFactory extends DefaultSecurityDialogFactory {

  @Override
  @SuppressWarnings({"rawtypes"})
  public void selectGrantee(Window owner, DomainContext context, Consumer<PersistentDomainObject<?>> grantee) {
    showUserOrGroupDialog(owner, ifUser -> {
      OrgUnit orgUnit = ifUser ? Pdo.create(User.class, context) : Pdo.create(UserGroup.class, context);
      Rdc.displaySearchStage(orgUnit, Modality.APPLICATION_MODAL, owner, false,
                             list -> grantee.accept(list.isEmpty() ? null : list.get(0)));
    });
  }

  /**
   * Shows a question dialog whether to select a user or a group.
   *
   * @param owner the dialog owner
   * @param runIt a consumer invoked with true if user, false if group, never null
   */
  public void showUserOrGroupDialog(Window owner, Consumer<Boolean> runIt) {
    Popup popup = new Popup();
    Parent notification =
      FxFactory.getInstance()
               .createNotificationBuilder()
               .type(NotificationBuilder.Type.QUESTION)
               .text(GuiBundle.getString("User or Group?"))
               .button(GuiBundle.getString("User"), null, false, () -> runIt.accept(Boolean.TRUE))
               .button(GuiBundle.getString("Group"), null, false, () -> runIt.accept(Boolean.FALSE))
               .hide(popup::hide)
               .build();
    FxUtilities.getInstance().showNotification(owner, popup, notification, null);
  }

}
