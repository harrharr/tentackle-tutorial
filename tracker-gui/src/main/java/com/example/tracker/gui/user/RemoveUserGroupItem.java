/*
 * Tracker generated by tentackle-project-archetype.
 */

package com.example.tracker.gui.user;

import com.example.tracker.gui.GuiBundle;
import com.example.tracker.gui.GuiConstants;
import com.example.tracker.pdo.md.User;
import com.example.tracker.pdo.md.UserGroup;
import javafx.collections.ObservableList;
import javafx.scene.control.MenuItem;
import javafx.scene.control.TreeItem;

import org.tentackle.fx.Fx;
import org.tentackle.fx.rdc.PdoTreeCell;
import org.tentackle.fx.rdc.PdoTreeContextMenuItem;
import org.tentackle.fx.rdc.PdoTreeContextMenuItemService;

/**
 * Menu item to remove a usergroup from a user.
 */
@PdoTreeContextMenuItemService(value = UserGroup.class, ordinal = 500, group = GuiConstants.ITEM_GROUP)
public class RemoveUserGroupItem extends MenuItem implements PdoTreeContextMenuItem<UserGroup> {

  /**
   * Creates a menu item.
   *
   * @param cell the tree cell
   */
  public RemoveUserGroupItem(PdoTreeCell<UserGroup> cell) {
    super(GuiBundle.getString("remove from user"), Fx.createGraphic("cut"));
    UserGroup group = cell.getItem();
    boolean disabled = true;
    if (group.isEditAllowed()) {
      User usr = cell.getPdoTreeItem().getParentPdo(User.class);
      if (usr != null) {
        User user = usr.reload();
        disabled = false;
        setOnAction(e -> {
          user.getUserGroups().remove(group);
          user.save();
          @SuppressWarnings({ "unchecked", "rawtypes" })
          ObservableList<TreeItem<UserGroup>> items = (ObservableList) cell.getPdoTreeItem().getParentPdoItem().getChildren();
          int i=0;
          for (TreeItem<UserGroup> item: items) {
            if (group.equals(item.getValue())) {
              items.remove(i);
              cell.getTreeView().refresh();
              break;
            }
            i++;
          }
        });
      }
    }
    setDisable(disabled);
  }

}
