/*
 * Tracker generated by tentackle-project-archetype.
 */

package com.example.tracker.common;

import org.tentackle.common.LocaleProvider;
import org.tentackle.common.Service;

import java.util.List;
import java.util.Locale;

/**
 * Application specific locale provider.
 * <p>
 * Narrows the locales to their languages.<br>
 * The default language is "en".<br>
 * Secondary supported languages: "de" (feel free to change that)
 */
@Service(LocaleProvider.class)
public class TrackerLocaleProvider extends LocaleProvider {

  private static final List<Locale> EFFECTIVE_LOCALES = List.of(Locale.ENGLISH, Locale.GERMAN);

  @Override
  public Locale getEffectiveLocale(Locale locale) {
    Locale effectiveLocale = Locale.ENGLISH;    // fallback locale
    if (locale != null) {
      for (Locale secondaryLocale : EFFECTIVE_LOCALES) {
        if (locale.getLanguage().equals(secondaryLocale.getLanguage())) {
          effectiveLocale = secondaryLocale;
          break;
        }
      }
    }
    return effectiveLocale;
  }

  @Override
  public List<Locale> getEffectiveLocales() {
    return EFFECTIVE_LOCALES;
  }

  @Override
  public boolean isLocaleSupported(Locale locale) {
    if (locale != null) {
      for (Locale secondaryLocale : EFFECTIVE_LOCALES) {
        if (secondaryLocale.getLanguage().equals(locale.getLanguage())) {
          return true;
        }
      }
    }
    return false;
  }

}
